#!groovy

pipeline {
  agent { node { label 'linux' } }
  parameters {
    choice(
            description: 'GIT branch name to build (master/8.0/servlet_jakarta)',
            name: 'TCK_BRANCH',
            choices: ['servlet_jakarta','8.0','master']
    )
    choice(
            description: 'Github org',
            name: 'GITHUB_ORG',
            choices: ['olamy','eclipse-ee4j']
    )
    choice(
            description: 'TCK servlet job to run(servlettck-run-jetty-11.0.x/servlettck-run-jetty-10.0.x)',
            name: 'TCK_TO_RUN',
            choices: ['nightlies/servlettck-run-jetty-11.0.x','nightlies/servlettck-run-jetty-11.0.x']
    )
  }
  stages {
      stage("cleanup"){
        steps {
            sh "rm -rf *"
        }
      }
      stage("Checkout TCK Run") {
        steps {
            git url: 'https://github.com/${GITHUB_ORG}/jakartaee-tck/', branch: '${TCK_BRANCH}'
        }
      }

      stage("Build TCK Servlet") {
        steps {
            withEnv(["JAVA_HOME=${ tool "jdk8" }",
                    "PATH+ANT+MAVEN=${tool 'ant-latest'}/bin:${env.JAVA_HOME}/bin:${tool 'maven3'}/bin",
                    "GF_BUNDLE_URL=https://jenkins.webtide.net/userContent/glassfish-5.1.0.zip"]) {
                sh "apt --yes update && apt --yes install zip"
                sh "docker/build_standalone-tcks.sh servlet"
                sh "docker/build_standalone-tcks.sh websocket"
                archiveArtifacts artifacts: "standalone-bundles/*.zip",allowEmptyArchive: true
            }
        }
      }

      stage("Schedule TCK run") {
        steps {
            script {
              if (TCK_TO_RUN) {
                TCK_URL = "$JENKINS_URL/$JOB_NAME/$BUILD_NUMBER/artifact/standalone-bundles/servlet-tck-4.0.0.zip"
                echo "tckurl: $TCK_URL"

                build job: "$TCK_TO_RUN", parameters: [string(name: 'TCKURL', value: "$TCK_URL")]

              }
            }
        }
      }
  }
}
